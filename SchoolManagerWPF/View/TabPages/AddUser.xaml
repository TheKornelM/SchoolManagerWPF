<UserControl x:Class="SchoolManagerWPF.View.TabPages.AddUser"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:SchoolManagerWPF.View.TabPages"
             xmlns:resx="clr-namespace:SchoolManagerModel.Resources;assembly=SchoolManagerModel"
             xmlns:controls="clr-namespace:SchoolManagerWPF.View.Controls"
             xmlns:converters="clr-namespace:SchoolManagerWPF.Converters"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:RoleToIntConverter x:Key="RoleToIntConverter" />
        <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
        <converters:IntToVisibilityConverter x:Key="IntToVisibilityConverter" />
    </UserControl.Resources>
    <ScrollViewer VerticalScrollBarVisibility="Auto">
        <Grid Margin="30,30,30,30"
              Name="Users"
              Background="#FFE5E5E5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="45*" />
                <ColumnDefinition Width="30px" />
                <ColumnDefinition Width="45*" />
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="30px" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <!-- Username Field -->
                <controls:ValidatedField LabelContent="{x:Static resx:UI.Username}"
                                         FieldValue="{Binding User.Username, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         ValidationError="{Binding User.UsernameValidatorErrors}"
                                         Grid.Row="0" />

                <!-- First Name Field -->
                <controls:ValidatedField LabelContent="{x:Static resx:UI.FirstName}"
                                         FieldValue="{Binding User.FirstName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         ValidationError="{Binding User.FirstNameValidatorErrors}"
                                         Grid.Row="1" />

                <!-- Last Name Field -->
                <controls:ValidatedField LabelContent="{x:Static resx:UI.LastName}"
                                         FieldValue="{Binding User.LastName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         ValidationError="{Binding User.LastNameValidatorErrors}"
                                         Grid.Row="2" />

                <controls:ValidatedPasswordField LabelContent="{x:Static resx:UI.Password}"
                                                 Password="{Binding User.Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 ValidationError="{Binding User.PasswordValidatorErrors}"
                                                 Grid.Row="3"
                                                 ResetPassword="{Binding ResetPassword}"
                                                 x:Name="PasswordField" />

                <controls:ValidatedPasswordField LabelContent="{x:Static resx:UI.ConfirmPassword}"
                                                 Password="{Binding User.ConfirmPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 ValidationError="{Binding User.ConfirmPasswordValidatorErrors}"
                                                 ResetPassword="{Binding ResetPassword}"
                                                 Grid.Row="4"
                                                 x:Name="ConfirmPasswordField" />

                <controls:ValidatedField LabelContent="{x:Static resx:UI.EmailAddress}"
                                         FieldValue="{Binding User.Email, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         ValidationError="{Binding User.EmailValidatorErrors}"
                                         Grid.Row="5" />

                <Label Grid.Row="6"
                       Content="{x:Static resx:UI.Role}"></Label>
                <ComboBox Grid.Row="7"
                          SelectedIndex="{Binding SelectedRole, Converter={StaticResource RoleToIntConverter}}">
                    <ComboBoxItem Content="{x:Static resx:UI.Student}" />
                    <ComboBoxItem Content="{x:Static resx:UI.Teacher}" />
                    <ComboBoxItem Content="{x:Static resx:UI.Administrator}" />
                </ComboBox>

                <Button Content="{x:Static resx:UI.AddUser}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Top"
                        Height="50"
                        MinWidth="200"
                        Grid.Row="9"
                        Command="{Binding AddUserCommand}" />
            </Grid>

            <Grid Grid.Column="2"
                  Visibility="{Binding IsStudent, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="30px" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="30px" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <Label Content="{x:Static resx:UI.Class}"
                       Grid.Row="0" />
                <ComboBox Grid.Row="1"
                          ItemsSource="{Binding Classes}"
                          SelectedItem="{Binding Class}"
                          DisplayMemberPath="Name" />
                <Grid Grid.Row="3"
                      Grid.RowSpan="3"
                      Grid.Column="1"
                      Visibility="{Binding Subjects.Count, Converter={StaticResource IntToVisibilityConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <Label Content="{x:Static resx:UI.AssignedSubjects}"
                           Grid.Row="0" />
                    <controls:CheckBoxList Objects="{Binding Subjects, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                           Grid.Row="2"
                                           AllSubjectsSelected="{Binding AllSubjectsSelected, Mode=TwoWay}" />
                    <Button Grid.Row="4"
                            Command="{Binding SelectAllSubjectsCommand}"
                            MinHeight="50px"
                            Width="auto"
                            MaxWidth="200px">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=AllSubjectsSelected}"
                                                 Value="True">
                                        <Setter Property="Content"
                                                Value="{x:Static resx:UI.UnselectAll}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=AllSubjectsSelected}"
                                                 Value="False">
                                        <Setter Property="Content"
                                                Value="{x:Static resx:UI.SelectAll}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </Grid>
        </Grid>
    </ScrollViewer>
</UserControl>
